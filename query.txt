여자가 쓴 마음남기기의 수 중에서 2번이상 마음남기기를 쓴경우
select count(*) from MindView M,UserView U, RelationView R where U.userId=M.userId and U.userId=R.mainUserId and U.gender=1 group by U.userId HAVING count(*)>=2;
마음을 확인하고 커플이 된경우중 여자가 맘남기기를 2번한 경우
select U.age,count(*) as Mindcount,R.matchCheck from MindView M,UserView U, RelationView R where U.userId=M.userId and U.userId=R.mainUserId and U.gender=1 and R.matchCheck=1 and M.foundCheck=1 group by U.userId HAVING count(*)=2;
#가입된 회원들중 나이차 구간,접속시간차,메세지갯수에 ㄸㆍ라 구분한 쿼리(다이어리포함)
select relationId,gbByMindCount.relMatchStatus,U.userId,U.gender, TU.gender,messages,U.age, TU.age, CASE When U.age-TU.age>0 and U.age-TU.age<=5 Then '1' When U.age-TU.age<0 and U.age-TU.age>=-5 then '-1' When U.age-TU.age>5 and U.age-TU.age<=10 Then '2' When U.age-TU.age>10 then '3' When U.age-TU.age>=-10 and U.age-TU.age<-5 then '-2' When U.age-TU.age<-10 then '-3' When U.age-TU.age=0 Then '0' END as agegrade, U.countryCode, TU.countryCode,CASE When TimestampDiff(minute,U.fallingStartDate,TU.fallingStartDate)<=10 and TimestampDiff(minute,U.fallingStartDate,TU.fallingStartDate)>0 Then '0' When TimestampDiff(minute,U.fallingStartDate,TU.fallingStartDate)>60 and TimestampDiff(minute,U.fallingStartDate,TU.fallingStartDate)<=1440 Then '1'ELSE '2' END as Timegrade,U.fallingStartDate, TU.fallingStartDate, U.invitedDateByTarget, TU.invitedDateByTarget, U.facebookFriendsCount, TU.facebookFriendsCount, U.emotionId, TU.emotionId, matchDate, inviteCheck, CASE When countmind=0 Then '0' ELSE '1'END mindcount, hintCheckStatus, foundCheckStatus, CASE When countdiary=0 Then '0' ELSE '1'END as diarycount from (select M.foundCheck foundCheckStatus, M.hintCheck hintCheckStatus, R.mainUserId mainUserId,R.matchDate, R.inviteCheck, R.relId relationId, R.targetUserId,COUNT(M.mindId) countmind ,M.message messages,R.matchCheck relMatchStatus,COUNT(D.diaryId) countdiary from (RelationView R LEFT OUTER JOIN MindView M ON R.relId=M.relId) LEFT OUTER JOIN DiaryView D ON R.relId=D.relId group by R.relId) as gbByMindCount JOIN UserView as U on gbByMindCount.mainUserId=U.userId JOIN UserView as TU ON TU.userId=gbByMindCount.targetUserId where U.age is not NULL and TU.age is not NULL;
